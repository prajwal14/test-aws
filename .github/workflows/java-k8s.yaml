# CI/CD Workflow for deployment of Java Microservices in EKS Cluster

name: Build and Deploy to EKS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# Environment Variable for Job
env:
  AWS_REGION: PRAJWAL_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
  # ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
  # ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
  # CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    permissions:
      contents: 'read'
      packages: 'write'
    #   id-token: 'write'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! ${{ env.AWS_REGION }}

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.

      - name: Build with Maven
        run: mvn clean install


      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: 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 #${{ secrets.GITHUB_TOKEN }}


      - name: Build, tag, and push image to Github Package #Amazon ECR
        id: build-image
        env:
          # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG .
          docker image ls
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


##       if:  ${{ github.event_name != 'pull_request' }}
